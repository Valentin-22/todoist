{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setStatus","setInputText","todos","setTodos","inputText","vaLue","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAkCeA,EAjCH,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAgBrD,OACJ,iCACM,uBAAOC,MAAOD,EAAWE,SAhBF,SAACC,GACtBN,EAAaM,EAAEC,OAAOC,QAe6BC,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAdgB,SAACL,GACvBA,EAAEM,iBACFV,EAAS,GAAD,mBACDD,GADC,CACM,CAACY,KAAMV,EAAWW,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAE3DjB,EAAa,KASqBU,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQL,SAXU,SAACC,GACrBP,EAAUO,EAAEC,OAAOC,QAUgBU,KAAK,QAAQR,UAAU,cAAxD,UACE,wBAAQF,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCGKW,EA7BF,SAAC,GAAmC,IAAlCN,EAAiC,EAAjCA,KAAMO,EAA2B,EAA3BA,KAAMnB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAgB9B,OACQ,sBAAKQ,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAmED,IACnE,wBAAQF,QAdI,WACpBT,EAASD,EAAMoB,KAAI,SAAAC,GACf,OAAGA,EAAKP,KAAOK,EAAKL,GACT,2BACAO,GADP,IACaR,WAAYQ,EAAKR,YAG3BQ,OAO+BZ,UAAU,eAA5C,SACK,mBAAGA,UAAU,mBAEb,wBAAQC,QApBH,WAClBT,EAASD,EAAMsB,QAAO,SAAAC,GAAE,OAAIA,EAAGT,KAAOK,EAAKL,QAmBEL,UAAU,YAA1C,SACA,mBAAGA,UAAU,uBCVnBe,EAZC,SAAC,GAAuC,IAArCxB,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,SAAUwB,EAAmB,EAAnBA,cAC/B,OACA,qBAAKhB,UAAU,iBAAf,SACC,oBAAIA,UAAU,YAAd,SACCgB,EAAcL,KAAI,SAACD,GAAD,OACjB,cAAC,EAAD,CAAMlB,SAAUA,EAAUkB,KAAMA,EAAMnB,MAAOA,EAAqBY,KAAMO,EAAKP,MAApBO,EAAKL,YCyDvDY,MAzDf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOzB,EAAP,KAAkBH,EAAlB,KACA,EAA0B4B,mBAAS,IAAnC,mBAAO3B,EAAP,KAAcC,EAAd,KACA,EAA4B0B,mBAAS,OAArC,mBAAOC,EAAP,KAAe9B,EAAf,KACA,EAA0C6B,mBAAS,IAAnD,mBAAOF,EAAP,KAAsBI,EAAtB,KAIFC,qBAAU,WACRC,MACC,IAGDD,qBAAU,YACc,WACpB,OAAOF,GACL,IAAK,YACHC,EAAiB7B,EAAMsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACD,IAAK,cACFgB,EAAiB7B,EAAMsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACJ,QACEgB,EAAiB7B,IAIvBgC,KACC,CAAChC,EAAO4B,IAKb,IAGMG,EAAgB,WACpB,GAAsC,OAAlCE,aAAaC,QAAQ,SACvBD,aAAaE,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACN,IAAIC,EAAYF,KAAKG,MAAMN,aAAaC,QAAQ,UAChDM,QAAQC,IAAIH,KAIb,OACE,sBAAK7B,UAAU,MAAf,UACI,iCACG,8CAEP,cAAC,EAAD,CAAOX,UAAWA,EAAWI,UAAWA,EAAWF,MAAOA,EAAOC,SAAUA,EAAUF,aAAcA,IACnG,cAAC,EAAD,CAAU0B,cAAeA,EAAexB,SAAUA,EAAUD,MAAOA,QC/CxD0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb114403.chunk.js","sourcesContent":["\r\nconst Form =({ setStatus, setInputText, todos, setTodos, inputText }) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) =>{\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random() * 1000 },\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) => {\r\n      setStatus(e.target.value);\r\n    };\r\n\r\n    return (\r\n<form>\r\n      <input vaLue={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n    );\r\n}\r\n\r\nexport default Form;","\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    \r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => { \r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item;\r\n            })\r\n        );\r\n    };   \r\n    return (\r\n            <div className=\"todo\">\r\n                <li className={`todo-item ${todo.completed ? \"completed\" : \"\" }`}>{text}</li>\r\n                <button onClick={completeHandler} className=\"complete-btn\">\r\n                     <i className=\"fas fa-check\"></i>\r\n                      </button>\r\n                     <button onClick={deleteHandler} className=\"trash-btn\">\r\n                     <i className=\"fas fa-trash\"></i>\r\n                 </button>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import Todo from \"./Todo\";\r\n\r\nconst TodoList =({ todos, setTodos, filteredTodos }) =>{\r\n     return(\r\n     <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n      {filteredTodos.map((todo) => (\r\n        <Todo setTodos={setTodos} todo={todo} todos={todos} key={todo.id} text={todo.text} />\r\n      ))}\r\n       </ul>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState,useEffect } from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\n\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n \n\n//RUN ONCE when the app start\nuseEffect(() => {\n  getLocalTodos();\n}, []);\n\n  //USE EFFECT\n  useEffect(() => {\n    const filterHandler = () => {\n      switch(status) {\n        case \"completed\":\n          setFilteredTodos(todos.filter(todo => todo.completed === true));\n          break;\n         case \"uncompleted\":\n            setFilteredTodos(todos.filter(todo => todo.completed === false));\n            break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n    filterHandler();\n  }, [todos, status]);\n\n \n// save to local\n\nconst saveLocalTodos = () => {\n  localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }; \nconst getLocalTodos = () => {\n  if (localStorage.getItem(\"todos\") === null) {\n    localStorage.setItem(\"todos\", JSON.stringify([]));\n  } else {\n   let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n   console.log(todoLocal);\n  }\n};\n\n  return (\n    <div className=\"App\">\n        <header>\n           <h1> Todo ist </h1>\n    </header>\n    <Form  setStatus={setStatus} inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText}/>\n    <TodoList filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}